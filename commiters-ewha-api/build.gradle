
buildscript {
    ext {
        querydslPluginVersion = '1.0.10' // 플러그인 버전
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" } // 플러그인 저장소
    }
    dependencies {
        classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${querydslPluginVersion}")
        // querydsl 플러그인 의존성 등록
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compile group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

    //parser
    implementation 'org.jsoup:jsoup:1.11.3'
    compile group: 'com.rometools', name: 'rome', version: '1.5.0'
    testCompile group: 'org.mock-server', name: 'mockserver-netty', version: '5.8.1'
    compile group: 'commons-io', name: 'commons-io', version: '2.6'

    runtimeOnly 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'

    // querydsl
    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt")



    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
    testCompile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.0'

    // swagger-ui
    compile group: 'io.springfox', name: 'springfox-swagger2', version: '2.5.0'
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.5.0'


}

test {
    useJUnitPlatform()
}


// querydsl 적용
apply plugin: "com.ewerk.gradle.plugins.querydsl" // Plugin 적용
def querydslSrcDir = 'src/main/generated' // QClass 생성 위치

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = querydslSrcDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', querydslSrcDir]
        }
    }
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}